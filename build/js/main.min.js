"use strict";class ProductItem{constructor(t,e="img/noimage.jpg",c="Product Name",r="Is unknown"){this.img=t.img||e,this.title=t.title||c,this.price=t.price||r}render(){return`<div class='products__item'>
            <img src=${this.img} class='products__item-img' alt='Изображение товара'>
            <h3 class='products__item-title'>${this.title}</h3>
            <p class='products__item-text'>${this.price} rub.</p>
            <button class='products__item-btn'>Add</button>
          </div>`}}class ProductsList{constructor(t=".products"){this.container=t,this.goods=[{img:"img/good-1.jpg",title:"Shirt",price:150},{img:"img/good-2.jpg",title:"Socks",price:50},{img:"img/good-3.jpg",title:"Jacket",price:350},{img:"img/good-4.jpg",title:"Shoes",price:250}]}render(){const t=document.querySelector(this.container);for(var e of this.goods){const c=new ProductItem(e);t.insertAdjacentHTML("beforeend",c.render())}}calculateAmountOfProduct(){let t=0;for(var e of this.goods)t+=e.price}}let list=new ProductsList;list.render(),list.calculateAmountOfProduct();class CartItem{constructor(t){this.img=t.img,this.title=t.title,this.price=t.price}increaseProductQuantity(){}reduceProductQuantity(){}delite(){}recalculateAmountOfProduct(){}}class Cart{constructor(){}recalculateAmountOfProducts(){}placeOrder(){}}const cart=document.querySelector(".cart-button"),cartPopup=document.querySelector(".cart-popup");cart.addEventListener("click",()=>{cartPopup.classList.add("open")});const cartPopupClose=document.querySelector(".cart-popup__close");cartPopupClose.addEventListener("click",()=>{cartPopup.classList.remove("open")});
//# sourceMappingURL=main.min.js.map
